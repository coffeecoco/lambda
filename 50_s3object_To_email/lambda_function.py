import zlib
import base64
import json
import boto3
import datetime
import os
import yaml
import string
import StringIO
import re
from pprint import pprint
from email.header import Header
from email.message import Message
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
from email.utils import make_msgid
from email.utils import formatdate


def lambda_handler(event, context):
    stream = open('config.yaml', 'r')
    config = yaml.load(stream)

    emailTo = []
    emailTo.append(config['TO_EMAIL'])
    emailFrom = config['FROM_EMAIL']

    print "Starting billing-notify"

    bucket = event['Records'][0]['s3']['bucket']['name']
    key = event['Records'][0]['s3']['object']['key']

    today = datetime.date.today()

    s3 = boto3.client('s3')
    files = s3.get_object(Bucket=bucket, Key=key)

    filename = "billing-{}-".format(today.strftime("%Y-%m-%d"))
    filenamef = filename + key

    file = files['Body']

    ses = boto3.client('ses')

    msg = MIMEMultipart()
    msg['Subject'] = "[Daily Billing AWS]"
    msg['From'] = emailFrom
    msg['To'] = ", ".join(emailTo)
    msg['Message-Id'] = make_msgid()
    msg.preamble = 'Multipart message. \n'
    part = MIMEText('Hello\n A new file has been generated by the billing, please see in attachment.\n Regards, ')
    msg.attach(part)
    part = MIMEApplication(file.read())
    part.add_header('Content-Disposition', 'attachment', filename=filenamef)
    msg.attach(part)

    result = ses.send_raw_email(
        Source=msg['From'],
        Destinations=emailTo,
        RawMessage={
            'Data': msg.as_string(),
                }
        )
